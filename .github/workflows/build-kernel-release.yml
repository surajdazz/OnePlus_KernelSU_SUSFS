name: Build and Release OnePlus Kernels

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      ksun_branch:
        description: "Choose KernelSU Next Branch"
        required: true
        type: choice
        options:
          - stable
          - next
        default: next
      android14-6_1_susfs_branch:
        description: "Choose SusFS Branch for android14-6.1"
        type: string
        default: "gki-android14-6.1"

jobs:
  build-oneplus12:
    name: Build OnePlus 12 Kernel
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - model: OP12
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus12_v.xml
            android_version: android14
            kernel_version: "6.1"

    steps:
      - name: Select Appropriate SusFS Branch
        id: get-susfs-branch
        run: |
          SUSFS_BRANCH="${{ inputs.android14-6_1_susfs_branch }}"
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Kernel
        uses: ./.github/actions
        with:
          model: ${{ matrix.model }}
          soc: ${{ matrix.soc }}
          branch: ${{ matrix.branch }}
          manifest: ${{ matrix.manifest }}
          android_version: ${{ matrix.android_version }}
          kernel_version: ${{ matrix.kernel_version }}
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}

  trigger-release:
    needs: build-oneplus12
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* OnePlus 12 Kernel With KernelSU Next & SUSFS v1.5.9 *TEST BUILD*"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate and Create New Tag
        run: |
          BASE_TAG="v1.5.9-r0"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="$BASE_TAG"
          else
            LATEST_TAG=$(printf "%s\n%s\n" "$LATEST_TAG" "$BASE_TAG" | sort -rV | head -n1)
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Generate Release Notes
        id: generate-notes
        run: |
          cat << EOF > release_notes.md
          This release contains KernelSU Next and SUSFS v1.5.9

          Module:
          -> https://github.com/sidex15/ksu_module_susfs  

          Non-Official Managers:
          -> https://github.com/KernelSU-Next/KernelSU-Next  

          ### Built Devices

          | Model | Kernel Version |
          |-------|----------------|
          | OP12  | 6.1            |

          ### Features
          - [+] KernelSU-Next
          - [+] SUSFS v1.5.9
          - [+] Wireguard Support
          - [+] Maphide LineageOS Detections
          - [+] Futile Maphide for jit-zygote-cache Detections
          - [+] Magic Mount Support
          - [+] Ptrace message leak fix for kernels < 5.16
          - [+] Manual Hooks [scope_min_manual_hooks_v1.4]
          - [+] CONFIG_TMPFS_XATTR Support [Mountify Support]
          - [+] BBR v1 Support.
          - [+] HMBIRD scx support for OnePlus 13 & OnePlus Ace 5 Pro.
          EOF

      - name: Create GitHub Release
        run: |
          gh release create "${{ env.NEW_TAG }}" \
            --repo "${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" \
            --title "${{ env.RELEASE_NAME }}" \
            --notes-file release_notes.md \
            --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: |
          for file in ./downloaded-artifacts/kernel-*/*.zip; do
              if [ -d "$file" ]; then continue; fi
              gh release upload ${{ env.NEW_TAG }} "$file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Show Uploaded Files
        run: ls ./downloaded-artifacts/**/*
